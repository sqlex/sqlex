plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm'
    id "com.gradle.plugin-publish" version "1.0.0-rc-1"
    id 'maven-publish'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation project(":parser")
}

//kotlin和groovy兼容交互
compileGroovy.dependsOn compileKotlin
compileGroovy.classpath += files(compileKotlin.destinationDir)
classes.dependsOn compileGroovy

gradlePlugin {
    plugins {
        sqlex {
            id = "me.danwi.sqlex"
            implementationClass = "me.danwi.sqlex.gradle.SqlExPlugin"
            displayName = 'Gradle SqlEx plugin'
            description = "SqlEx compile plugin"
        }
    }
}

pluginBundle {
    website = 'https://github.com/sqlex/sqlex/tree/master/gradle-plugin'
    vcsUrl = 'https://github.com/sqlex/sqlex'
    tags = ['sqlex', 'orm', 'dbhelper']
}

//设置gradle上传的密钥
if (localProperties.get("gradle.key")) {
    tasks.create("setupPluginUpload") {
        System.properties.setProperty("gradle.publish.key", localProperties.get("gradle.key"))
        System.properties.setProperty("gradle.publish.secret", localProperties.get("gradle.secret"))
    }
    tasks.publishPlugins.dependsOn tasks.setupPluginUpload
}

//禁止当前构建被上传到maven中央仓库,因为其已经上传到gradle的插件仓库,see https://github.com/gradle-nexus/publish-plugin/issues/143
gradle.taskGraph.whenReady {
    tasks.withType(PublishToMavenRepository) { PublishToMavenRepository t ->
        if (t.repository == null)
            logger.info("Task `{}` had null repository", t.path)
        else if (t.repository.name == 'sonatype') {
            logger.lifecycle("Disabling task `{}` because it publishes to Sonatype", t.path)
            t.enabled = false
        }
    }
}